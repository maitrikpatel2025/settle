# Generated by Django 3.0.2 on 2020-01-28 09:02

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('biography', models.TextField(blank=True, max_length=256)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=256)),
                ('phone', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(blank=True, max_length=256)),
                ('region', models.CharField(blank=True, max_length=256)),
                ('distric', models.CharField(blank=True, max_length=256)),
                ('street1', models.CharField(blank=True, max_length=256)),
                ('street2', models.CharField(blank=True, max_length=256)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Potential',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.ImageField(upload_to=api.models.profile_picture_path)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(default='generic', editable=False, max_length=256)),
                ('available_for', models.CharField(choices=[('sale', 'Sale'), ('rent', 'Rent'), ('book', 'Book')], max_length=5)),
                ('price', models.FloatField()),
                ('currency', models.CharField(max_length=256)),
                ('price_negotiation', models.CharField(blank=True, choices=[('Y', 'YES'), ('N', 'NO')], max_length=5, null=True)),
                ('descriptions', models.TextField(blank=True, null=True)),
                ('rating', models.SmallIntegerField(default=3, null=True)),
                ('post_date', models.DateTimeField(auto_now_add=True)),
                ('amenities', models.ManyToManyField(blank=True, related_name='properties', to='api.Amenity')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Contact')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Location')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('potentials', models.ManyToManyField(blank=True, related_name='properties', to='api.Potential')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('width', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('length_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('area', models.FloatField(blank=True, null=True)),
                ('area_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('carrying_capacity', models.IntegerField(blank=True, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('width', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('length_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('is_registered', models.CharField(blank=True, choices=[('Y', 'YES'), ('N', 'NO')], max_length=5, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('width', models.FloatField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('length_unit', models.CharField(blank=True, max_length=10, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('property_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Property')),
                ('payment_terms', models.SmallIntegerField(blank=True, null=True)),
                ('unit_of_payment_terms', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('api.property',),
        ),
        migrations.AddField(
            model_name='property',
            name='services',
            field=models.ManyToManyField(blank=True, related_name='properties', to='api.Service'),
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_main', models.BooleanField(default=False)),
                ('tooltip', models.CharField(blank=True, max_length=256)),
                ('src', models.ImageField(upload_to=api.models.property_img_path)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='api.Property')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('value', models.CharField(blank=True, max_length=256, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_features', to='api.Property')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='picture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ProfilePicture'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
